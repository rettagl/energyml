<?xml version="1.0" encoding="utf-8"?>
<xs:schema targetNamespace="http://www.energistics.org/energyml/data/resqmlv2" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:resqml="http://www.energistics.org/energyml/data/resqmlv2" xmlns:eml="http://www.energistics.org/energyml/data/commonv2" elementFormDefault="qualified" version="2.1">
	<!--														-->
	<!-- Energistics License Agreement
			This file is distributed under the Energistics Product License Agreement at
			http://www.energistics.org/product-license-agreement
			Use of this file constitutes agreement with the Energistics Product License Agreement.
			Copyright (c) 2016 Energistics. All rights reserved.
			Energistics, WITSML, PRODML and RESQML are trademarks or registered trademarks of Energistics.
			-->
	<!--														-->
	<xs:annotation>
		<xs:documentation>This package contains classes for features, interpretations, representations and related objects used to define and exchange seismic survey data in RESQML.
Representations are the digital descriptions of a feature interpretation or a technical feature. This representation is based on a topology and contains the geometry of the digital description or is based on the topology or the geometry of another representation. Structural has two types of representations: 

	- Representation of Individual Representations. Each Individual representation is specialized by dimension (point, polyline, surface, volume) and represents only one individual geological interpretation (such as, horizons, faults, geological bodies, geological units, and fluids units).


	- Representation of Organization Representations. Each organization representations is a consistent assembly of different representations of interpretations of organizations (such as, earth model, structural organization, stratigraphic organizations, stratigraphic columns, and fluid organizations).</xs:documentation>
	</xs:annotation>
	<!--														-->
	<xs:import namespace="http://www.energistics.org/energyml/data/commonv2" schemaLocation="../../../common/v2.1/xsd_schemas/EmlAllObjects.xsd"/>
	<!--														-->
	<xs:include schemaLocation="Geometry.xsd"/>
	<xs:include schemaLocation="Representations.xsd"/>
	<xs:include schemaLocation="Interpretations.xsd"/>
	<xs:complexType name="AbstractContactRepresentationPart" abstract="true">
		<xs:annotation>
			<xs:documentation>Parent class of the sealed and non-sealed contact elements. </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Index" type="eml:NonNegativeLong" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The index of the contact.
Indicates identity of the contact in the surface framework context. It is used for contact identities and to find the interpretation of this particular contact.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="AbstractSurfaceFrameworkRepresentation" abstract="true">
		<xs:annotation>
			<xs:documentation>Parent class for a sealed or non-sealed surface framework representation. Each one instantiates a representation set representation.

The difference between the sealed and non-sealed frameworks is that, in the non-sealed case, we do not have all of the contact representations, or we have all of the contacts but they are not all sealed.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="resqml:RepresentationSetRepresentation">
				<xs:sequence>
					<xs:element name="ContactIdentity" type="resqml:ContactIdentity" minOccurs="0" maxOccurs="unbounded"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="AbstractSurfaceRepresentation" abstract="true">
		<xs:annotation>
			<xs:documentation>Parent class of structural surface representations, which can be bounded by an outer ring and has inner rings. These surfaces may consist of one or more patches.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="resqml:AbstractRepresentation">
				<xs:sequence>
					<xs:element name="SurfaceRole" type="resqml:SurfaceRole" minOccurs="1" maxOccurs="1"/>
					<xs:element name="Boundaries" type="resqml:PatchBoundaries" minOccurs="0" maxOccurs="unbounded"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ContactIdentity">
		<xs:annotation>
			<xs:documentation>Indicates identity between two (or more) contacts. For possible types of identities, see IdentityKind.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="IdentityKind" type="resqml:IdentityKind" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The kind of contact identity.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListOfContactRepresentations" type="eml:AbstractIntegerArray" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The contact representations that share common identity as specified by their indices.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListOfIdenticalNodes" type="eml:AbstractIntegerArray" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Indicates which nodes (identified by their common index in all contact representations) of the contact representations are identical.

If this list is not present, then it indicates that all nodes in each representation are identical, on an element by element level.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ContactPatch">
		<xs:annotation>
			<xs:documentation>A subset of topological elements of an existing contact representation part (sealed or non-sealed contact).</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="resqml:Patch1d">
				<xs:sequence>
					<xs:element name="RepresentationIndex" type="eml:NonNegativeLong" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Identifies a representation by its index, in the list of representations contained in the organization.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="SupportingRepresentationNodes" type="eml:AbstractIntegerArray" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The ordered list of nodes (identified by their global index) in the supporting representation, which constitutes the contact patch.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ContactRepresentationReference">
		<xs:annotation>
			<xs:documentation>Used when the contact already exists as a top-level element representation.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="resqml:AbstractContactRepresentationPart">
				<xs:sequence>
					<xs:element name="Representation" type="eml:DataObjectReference" minOccurs="1" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="EdgePatch">
		<xs:annotation>
			<xs:documentation>Describes edges that are not linked to any other edge. Because edges do not have indices, a consecutive pair of nodes is used to identify each edge. 

The split edges dataset is a set of nodes (2 nodes per edge). Each patch has a set of 2 nodes.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="resqml:Patch1d">
				<xs:sequence>
					<xs:element name="SplitEdges" type="eml:AbstractIntegerArray" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>An array of split edges to define patches.
It points to an HDF5 dataset, which must be a 2D array of non-negative integers with dimensions 2 x numSplitEdges.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="GeologicBoundaryKind">
		<xs:annotation>
			<xs:documentation>The various geologic boundaries a well marker can indicate.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="eml:TypeEnum">
			<xs:enumeration value="fault"/>
			<xs:enumeration value="geobody"/>
			<xs:enumeration value="horizon"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="Grid2dPatch">
		<xs:annotation>
			<xs:documentation>Patch representing a single 2D grid and its geometry.
The FastestAxisCount and the SlowestAxisCount determine the indexing of this grid 2D patch, by defining a 1D index for the 2D grid as follows:
Index = FastestIndex + FastestAxisCount * SlowestIndex
When stored in HDF5, this indexing order IS the data order, in which case, in HDF5 it would be a 2D array of the SlowestAxisCount*FastestAxisCount. 

I is the fastest axis; J is the slowest.
Inline is the fastest axis; crossline is the slowest axis.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="resqml:Patch">
				<xs:sequence>
					<xs:element name="FastestAxisCount" type="eml:PositiveLong" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The number of nodes in the fastest direction.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="SlowestAxisCount" type="eml:PositiveLong" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The number of nodes in the slowest direction.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Geometry" type="resqml:PointGeometry" minOccurs="1" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="Grid2dRepresentation" type="resqml:Grid2dRepresentation" substitutionGroup="eml:AbstractDataObject"/>
	<xs:complexType name="Grid2dRepresentation">
		<xs:annotation>
			<xs:documentation>Representation based on a 2D grid. For definitions of slowest and fastest axes of the array, see Grid2dPatch. </xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="resqml:AbstractSurfaceRepresentation">
				<xs:sequence>
					<xs:element name="Grid2dPatch" type="resqml:Grid2dPatch" minOccurs="1" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="Grid2dSetRepresentation" type="resqml:Grid2dSetRepresentation" substitutionGroup="eml:AbstractDataObject"/>
	<xs:complexType name="Grid2dSetRepresentation">
		<xs:annotation>
			<xs:documentation>Set of representations based on a 2D grid. Each 2D grid representation corresponds to one patch of the set.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="resqml:AbstractSurfaceRepresentation">
				<xs:sequence>
					<xs:element name="Grid2dPatch" type="resqml:Grid2dPatch" minOccurs="2" maxOccurs="unbounded"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="LineRole">
		<xs:annotation>
			<xs:documentation>Indicates the various roles that a polyline topology can have in a representation. </xs:documentation>
		</xs:annotation>
		<xs:restriction base="eml:TypeEnum">
			<xs:enumeration value="fault center line">
				<xs:annotation>
					<xs:documentation>Usually used to represent fault lineaments on horizons.
These lines can represent nonsealed contact interpretation parts defined by a horizon/fault intersection. </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="pick">
				<xs:annotation>
					<xs:documentation>Used to represent all types of nonsealed contact interpretation parts defined by a horizon/fault intersection.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="inner ring">
				<xs:annotation>
					<xs:documentation>Closed polyline that delineates a hole in a surface patch. </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="outer ring">
				<xs:annotation>
					<xs:documentation>Closed polyline that delineates the extension of a surface patch.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="trajectory">
				<xs:annotation>
					<xs:documentation>Polyline that is used to represent a well trajectory representation.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="interpretation line">
				<xs:annotation>
					<xs:documentation>Line corresponding to a digitalization along an earth model section.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="contact">
				<xs:annotation>
					<xs:documentation>Used to represent nonsealed contact interpretation parts defined by a horizon/fault intersection.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="depositional line">
				<xs:annotation>
					<xs:documentation>Used to represent nonsealed contact interpretation parts defined by a horizon/horizon intersection.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="erosion line">
				<xs:annotation>
					<xs:documentation>Used to represent nonsealed contact interpretation parts defined by a horizon/horizon intersection.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="contouring">
				<xs:annotation>
					<xs:documentation>Used to obtain sets of 3D x, y, z points to represent any boundary interpretation.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="pillar">
				<xs:annotation>
					<xs:documentation>Used to represent the pillars of a column-layer volumic grid. </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="NodePatch">
		<xs:annotation>
			<xs:documentation>Patch representing a list of nodes to which geometry may be attached.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="resqml:Patch1d">
				<xs:sequence>
					<xs:element name="Geometry" type="resqml:PointGeometry" minOccurs="1" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="NonSealedContactRepresentationPart">
		<xs:annotation>
			<xs:documentation>Defines a non-sealed contact representation, meaning that this contact representation is defined by a geometry.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="resqml:AbstractContactRepresentationPart">
				<xs:sequence>
					<xs:element name="Contact" type="resqml:ContactPatch" minOccurs="0" maxOccurs="unbounded"/>
					<xs:element name="Geometry" type="resqml:AbstractGeometry" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="NonSealedSurfaceFrameworkRepresentation" type="resqml:NonSealedSurfaceFrameworkRepresentation" substitutionGroup="eml:AbstractDataObject"/>
	<xs:complexType name="NonSealedSurfaceFrameworkRepresentation">
		<xs:annotation>
			<xs:documentation>A collection of contact representations parts, which are a list of contact patches with no identity. This collection of contact representations is completed by a set of representations gathered at the representation set representation level.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="resqml:AbstractSurfaceFrameworkRepresentation">
				<xs:sequence>
					<xs:element name="NonSealedContactRepresentation" type="resqml:AbstractContactRepresentationPart" minOccurs="0" maxOccurs="unbounded"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="SealedContactRepresentationPart">
		<xs:annotation>
			<xs:documentation>Sealed contact elements that indicate that 2 or more contact patches are partially or totally colocated or equivalent. For possible types of identity, see IdentityKind.  </xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="resqml:AbstractContactRepresentationPart">
				<xs:sequence>
					<xs:element name="IdenticalNodeIndices" type="eml:AbstractIntegerArray" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Indicates which nodes (identified by their common index in all contact patches) of the contact patches are identical.

If this list is not present, then it indicates that all nodes in each representation are identical, on an element-by-element level.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="IdentityKind" type="resqml:IdentityKind" minOccurs="1" maxOccurs="1"/>
					<xs:element name="Contact" type="resqml:ContactPatch" minOccurs="2" maxOccurs="unbounded"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="SealedSurfaceFrameworkRepresentation" type="resqml:SealedSurfaceFrameworkRepresentation" substitutionGroup="eml:AbstractDataObject"/>
	<xs:complexType name="SealedSurfaceFrameworkRepresentation">
		<xs:annotation>
			<xs:documentation>A collection of contact representations parts, which are a list of contact patches and their identities. This collection of contact representations is completed by a set of representations gathered at the representation set representation level.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="resqml:AbstractSurfaceFrameworkRepresentation">
				<xs:sequence>
					<xs:element name="SealedContactRepresentation" type="resqml:SealedContactRepresentationPart" minOccurs="0" maxOccurs="unbounded"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="SealedVolumeFrameworkRepresentation" type="resqml:SealedVolumeFrameworkRepresentation" substitutionGroup="eml:AbstractDataObject"/>
	<xs:complexType name="SealedVolumeFrameworkRepresentation">
		<xs:annotation>
			<xs:documentation>A strict boundary representation (BREP), which represents the volume region by assembling together shells.

BUSINESS RULE: The sealed structural framework must be part of the same earth model as this sealed volume framework.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="resqml:RepresentationSetRepresentation">
				<xs:sequence>
					<xs:element name="Regions" type="resqml:VolumeRegion" minOccurs="1" maxOccurs="unbounded"/>
					<xs:element name="BasedOn" type="eml:DataObjectReference" minOccurs="1" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="SurfaceRole">
		<xs:annotation>
			<xs:documentation>Indicates the various roles that a surface topology can have.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="eml:TypeEnum">
			<xs:enumeration value="map">
				<xs:annotation>
					<xs:documentation>Representation support for properties.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="pick">
				<xs:annotation>
					<xs:documentation>Representation support for 3D points picked in 2D or 3D.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="TrianglePatch">
		<xs:annotation>
			<xs:documentation>Patch made of triangles, where the number of triangles is given by the patch count. 
BUSINESS RULE: Within a patch, all the triangles must be contiguous.

The patch contains: 

	- Number of nodes within the triangulation and their locations. 
	- 2D array describing the topology of the triangles. 


Two triangles that are connected may be in different patches.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="resqml:Patch1d">
				<xs:sequence>
					<xs:element name="NodeCount" type="eml:NonNegativeLong" minOccurs="1" maxOccurs="1"/>
					<xs:element name="Triangles" type="eml:AbstractIntegerArray" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The triangles are a 2D array of non-negative integers with the dimensions 3 x numTriangles.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="SplitEdgePatch" type="resqml:EdgePatch" minOccurs="0" maxOccurs="unbounded"/>
					<xs:element name="Geometry" type="resqml:PointGeometry" minOccurs="1" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="TriangulatedSetRepresentation" type="resqml:TriangulatedSetRepresentation" substitutionGroup="eml:AbstractDataObject"/>
	<xs:complexType name="TriangulatedSetRepresentation">
		<xs:annotation>
			<xs:documentation>A representation based on set of triangulated mesh patches, which gets its geometry from a 1D array of points.

BUSINESS RULE: The orientation of all the triangles of this representation must be consistent.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="resqml:AbstractSurfaceRepresentation">
				<xs:sequence>
					<xs:element name="TrianglePatch" type="resqml:TrianglePatch" minOccurs="1" maxOccurs="unbounded"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="VolumeRegion">
		<xs:annotation>
			<xs:documentation>The volume within a shell or envelope.

Known issue (2.0): This object should be considered a volume region patch. Specifically the indexable element kind = patch, despite not inheriting from a patch, with the patch index given by the contained element.

The volume region must be considered as a patch in version 2.0 (even if now, this volume region is not literally inheriting from the patch class).</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="PatchIndex" type="eml:NonNegativeLong" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This patch index is used to enumerate the volume regions.

Known issue (2.0): Patch Index should  inherit from patch, instead of being listed as a volume region element.

Volume regions must be considered as a patch in version 2.0 (even if now, this volume region is not literally inheriting from the patch class).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InternalShells" type="resqml:VolumeShell" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="ExternalShell" type="resqml:VolumeShell" minOccurs="1" maxOccurs="1"/>
			<xs:element name="Represents" type="eml:DataObjectReference" minOccurs="1" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="VolumeShell">
		<xs:annotation>
			<xs:documentation>The shell or envelope of a structural, stratigraphic, or fluid unit.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ShellUid" type="eml:String64" minOccurs="1" maxOccurs="1"/>
			<xs:element name="MacroFaces" type="resqml:OrientedMacroFace" minOccurs="1" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="OrientedMacroFace">
		<xs:annotation>
			<xs:documentation>An element of a volume shell that is defined by a set of oriented faces belonging to boundable patches.

A macroface may describe a contact between:

	- two structural, stratigraphic, or fluid units.  
	- one boundary feature (fault or frontier) and a unit.  


A face is a bounded open subset of a plane or a curved surface in 3D, delimited by an outer contour and zero, one, or more inner contours describing holes.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="PatchIndexOfRepresentation" type="eml:NonNegativeLong" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Creates the triangulation and 2D grid representation for which the patches match the macrofaces.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RepresentationIndex" type="eml:NonNegativeLong" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Identifies the representation by its index, in the list of representations contained in the organization.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SideIsPlus" type="xs:boolean" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Because a user must represent the two sides of a macro face that correspond to the same patch (identified by a PatchIndexOfRepresentation) of a Representation (identified by a RepresentationIndex), then he must define each side by its orientation. Each macro face has two orientations: A positive one and a negative one. The positive one is declared by setting SideIsPlus = True; the negative one is declared by setting SideIsPlus = False. 
This attribute allows us to define different property distributions on the different macro face sides.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PatchBoundaries">
		<xs:annotation>
			<xs:documentation>Defines the boundaries of an indexed patch. These boundaries are outer and inner rings.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ReferencedPatch" type="eml:NonNegativeLong" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The XML index of the referenced patch inside this representation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InnerRing" type="eml:DataObjectReference" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="OuterRing" type="eml:DataObjectReference" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="PlaneSetRepresentation" type="resqml:PlaneSetRepresentation" substitutionGroup="eml:AbstractDataObject"/>
	<xs:complexType name="PlaneSetRepresentation">
		<xs:annotation>
			<xs:documentation>Defines a plane representation, which can be made up of multiple patches. Commonly represented features are fluid contacts or frontiers. Common geometries of this representation are titled or horizontal planes.

BUSINESS RULE: If the plane representation is made up of multiple patches, then you must specify the outer rings for each plane patch.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="resqml:AbstractSurfaceRepresentation">
				<xs:sequence>
					<xs:element name="Planes" type="resqml:AbstractPlaneGeometry" minOccurs="1" maxOccurs="unbounded"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="PointSetRepresentation" type="resqml:PointSetRepresentation" substitutionGroup="eml:AbstractDataObject"/>
	<xs:complexType name="PointSetRepresentation">
		<xs:annotation>
			<xs:documentation>A representation that consists of one or more node patches. Each node patch is an array of XYZ coordinates for the 3D points. There is no implied linkage between the multiple patches.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="resqml:AbstractRepresentation">
				<xs:sequence>
					<xs:element name="NodePatch" type="resqml:NodePatch" minOccurs="1" maxOccurs="unbounded"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="PolylineRepresentation" type="resqml:PolylineRepresentation" substitutionGroup="eml:AbstractDataObject"/>
	<xs:complexType name="PolylineRepresentation">
		<xs:annotation>
			<xs:documentation>A representation made up of a single polyline or "polygonal chain", which may be closed or not.

Definition from Wikipedia (http://en.wikipedia.org/wiki/Piecewise_linear_curve):

A polygonal chain, polygonal curve, polygonal path, or piecewise linear curve, is a connected series of line segments. More formally, a polygonal chain P is a curve specified by a sequence of points \scriptstyle(A_1, A_2, \dots, A_n) called its vertices so that the curve consists of the line segments connecting the consecutive vertices.

In computer graphics a polygonal chain is called a polyline and is often used to approximate curved paths.

BUSINESS RULE: To record a polyline the writer software must give the values of the geometry of each node in an order corresponding to the logical series of segments (edges). The geometry of a polyline must be a 1D array of points.

A simple polygonal chain is one in which only consecutive (or the first and the last) segments intersect and only at their endpoints.

A closed polygonal chain (isClosed=True) is one in which the first vertex coincides with the last one, or the first and the last vertices are connected by a line segment. </xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="resqml:AbstractRepresentation">
				<xs:sequence>
					<xs:element name="LineRole" type="resqml:LineRole" minOccurs="0" maxOccurs="1"/>
					<xs:element name="IsClosed" type="xs:boolean" minOccurs="1" maxOccurs="1"/>
					<xs:element name="NodePatch" type="resqml:NodePatch" minOccurs="1" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
</xs:schema>
